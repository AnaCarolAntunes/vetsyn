\name{rawW_to_syndromicW}
\alias{rawW_to_syndromicW}
\title{rawW_to_syndromicW}
\usage{
  rawW_to_syndromicW(id, syndromes.var, syndromes.name,
    week.var, min.week, min.year, max.week, max.year,
    sort = TRUE, data = NULL)
}
\arguments{
  \item{id}{indicates a variable (or multiple variables)
  which should be used to identify unique events in the
  data. It can be provided as an R vector (p.e.
  mydata$myid), as the name of a DataFrame column (p.e.
  id=myid, data=my.data), or as multiple column names (p.e.
  id=list(id1,id2,id3), data=my.data).}

  \item{syndromes.var}{the variable that identifies group
  membership (in general the syndromic grouping). Can be
  \code{numeric}, \code{character} or \code{factor}.}

  \item{syndromes.name}{An optional argument providing the
  syndromic groups to be monitored. If not given, it is
  taken from the values found in \code{syndromes.var}. When
  syndromes.name IS provided, it should be provided as
  character value or vector (p.e. "Mastitis" or
  c("Mastitis","GIT") ).}

  \item{weeks.var}{The vector of weeks in the ISOWEEK
  format. If weeks are not recorded in the ISOweek format,
  please see the function \code{create_isoweek} which
  creates ISOweek from data provided as week and year, in
  numerical formats. Consult the examples in that function
  for an example of how to add a column to a dataset in the
  format ISOweek.}

  \item{min.week}{The user can specify the minimum
  week-year, and/or the maximum week-year, to create a
  dataset that extends the weeks found in the data.}

  \item{min.year}{see min.week above}

  \item{max.week}{see min.week above}

  \item{max.year}{see min.week above}

  \item{sort}{Default is true, which organizes the groups
  found in syndromes.name alphabetically. If set to FALSE,
  groups are listed in the order they are found in the
  dataset or provided in syndromes.name.}

  \item{data}{Optional argument. If used the other
  arguments can be specified as column names within the
  dataset provided through this argument}
}
\value{
  an object of the class \code{syndromicW} with the
  following slots: (1) OBSERVED: A matrix with as many
  columns as syndromic groups found in the dataset (or
  listed by the user); (2) DATES: A data frame where the
  first column contains the complete ISOweek of dates from
  the minimum to the maximum date found in the dataset (or
  set by the user), and additional columns contain
  additional date variables (such as day of numerical week
  and year) as generated by default when an object of the
  class \code{syndromicW} is created.
}
\description{
  \code{rawW_to_syndromicW}
}
\details{
  An object \code{syndromicW} (syndromic main class for
  data to be monitored weekly) can be created from data
  that were originally recorded with the DAY of the event,
  but the user wants to group by WEEK (then use
  \code{rawD_to_syndromicW}); or from data that were
  already recorded with only indication to the WEEK of the
  event, in which case the user must use the function
  \code{rawW_to_syndromicW}. For data already grouped into
  the number of observations per week, please see the
  function \code{syndromicW}.

  This function will count the number of cases for one or
  more defined groups, WEEKLY. Weeks without counts will be
  assigned a count of zero, generating a complete sequence
  of weeks The complete sequence will start at the minimum
  week found in the dataset and end at the maximum week, by
  default. However it is also possible to provide a minimum
  week-year EARLIER than the minimum in the dataset or a
  maximum week-year LATER than the latest recorded. The
  extra weeks are assigned counts of zero (minimum or
  maximum weeks already within the range of the dataset are
  ignored).

  The raw, observed data, is assumed to be stored in a
  \code{data.frame} in which each observed event (for
  instance a laboratory submission) is recorded in one or
  multiple rows. Unique events can be identified by one
  unique ID. It is possible however to take into
  consideration an hierarchical organization of the data,
  by which an unique ID can only be verified taking into
  account multiple columns (p.e. animal ID is unique within
  farm, but not between farms, therefore the IDs are unique
  combinations of the variables "farm" and "animal").

  Multiple events with the same unique ID are acceptable,
  but counted only once per time unit (p.e. day). Besides
  removing duplicated events, the function also completes
  missing days, assigning them a count of zero.

  The function counts the number of events, per week, for
  each of the groups found in the variable
  \code{syndromes.var}. However, the variable
  \code{syndromes.name} can be used to RESTRICT the groups
  counted (if not all values appearing in the data are to
  be subjected to monitoring, p.e. when "nonspecific" or
  "non-classified" values exist); or to EXTEND the list to
  include values which did not appear in the dataset (this
  is the recommended use of this function for regular
  monitoring, in order to assure that groups with zero
  events in the specific data batch being analyzed will
  still be represented in the output of the function,
  though with zero counts every day.)
}
\examples{
data(lab.weekly)
my.syndromicW <- rawW_to_syndromicW (id=lab.weekly$SubmissionID,
                                  syndromes.var=lab.weekly$Syndrome,
                                  week.var=lab.weekly$DateofSubmission)

my.syndromicW <- rawW_to_syndromicW (id=SubmissionID,
                                  syndromes.var=Syndrome,
                                  week.var=DateofSubmission,
                                  data=lab.weekly)

my.syndromicW <- rawW_to_syndromicW (id=list(HerdID,AnimalID),
                                  syndromes.var=Syndrome,
                                  week.var=DateofSubmission,
                                  data=lab.weekly)

my.syndromicW <- rawW_to_syndromicW (id=SubmissionID,
                                  syndromes.var=Syndrome,
                                  syndromes.name=c("GIT","Musculoskeletal"),
                                  week.var=DateofSubmission,
                                  data=lab.weekly)

my.syndromicW <- rawW_to_syndromicW (id=SubmissionID,
                                  syndromes.var=Syndrome,
                                  syndromes.name=c("GIT","Musculoskeletal","NonExisting"),
                                  week.var=DateofSubmission,
                                  data=lab.weekly)

my.syndromicW <- rawW_to_syndromicW (id=SubmissionID,
                                  syndromes.var=Syndrome,
                                  week.var=DateofSubmission,
                                  min.week=40,
                                  min.year=2010,
                                  data=lab.weekly)
}

